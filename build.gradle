allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'project-report'
    apply plugin: "checkstyle"
    apply plugin: 'pmd'

    group 'com.minicrm'
    version '1.0-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_14

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        google()
    }

    dependencies {
        implementation 'org.projectlombok:lombok:1.18.16'

        testImplementation 'org.projectlombok:lombok:1.18.16'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    }    

    jacocoTestReport {
        dependsOn test
        reports {
            xml.enabled false
            csv.enabled false
            html.enabled true
        }
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                classDirectories.setFrom(files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: '**/generated/**')
                }))
                limit {
                    minimum = 0.8
                }
            }
        }
    }

    def codeQualityDir = project(':code-quality')
    checkstyle {
	  configFile = codeQualityDir.file("src/main/code-quality/checkstyle.xml")
	  configProperties = [ 'checkstyleSuppressionFile':codeQualityDir.file("src/main/code-quality/checkstyle.suppression.xml").absolutePath]
	  ignoreFailures = false
	  maxWarnings = 0
	  maxErrors = 0
	  toolVersion '8.36.1'
	  
	}

    pmd{
        ignoreFailures = true
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "standard_error","standard_out","passed", "skipped", "failed","started"
        }

        jacoco{
            includes = ['tr.com.minicrm.*']
        }

        finalizedBy jacocoTestReport, jacocoTestCoverageVerification
    }

    jar{
        manifest {
            attributes 'Implementation-Title': project.name,
                    'Implementation-Version': project.version
        }
    }
}
